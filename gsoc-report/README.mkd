GSoC Code Samples Submission
============================

Deliverables
------------

* The `puppet` directory contains production Puppet code to manage the current QA infrastructure. This is the major piece of code created during the project.
 
* The server went live and is available at the following URL: <http://qa.nest-initiative.org>. The repositories hosting the [documentation][anubis-docs] and [configuration][anubis-puppet] are also available online.
  
  [anubis-docs]: http://git.zaytsev.net/?p=anubis-docs.git;a=summary
  [anubis-puppet]: http://git.zaytsev.net/?p=anubis-puppet.git;a=summary
 
* The rest of the directories contain significant patches developed during the program and submitted to the respective projects (along with the bug reports or enhancement requests).

### Source code and patches

- anubis-docs (infrastructure documentation)
- anubis-puppet (infrastructure description)
- nest (patches, scripts and survey report)
    + nest/testsuite-junit
    + nest/libtool-1.5-removal
    + nest/livecd-scripts
    + nest/users-survey
    + nest/users-survey/src
- facter (patches)
- e2fsprogs (patches)
- repoforge (patches)
    + facter
    + ruby
    + puppet
    + augeas
    + qemu
    + mock
    + mrepo
- mock (patches)
- mrepo (patchset)

### Bug reports

* Additionally, the following bugs in RHEL / Fedora have been investigated and reported (some of them are already acted upon by the maintainers):
  
    - Fix inconsistent permissions on /var/cache/mock
        + <https://bugzilla.redhat.com/show_bug.cgi?id=715286>
  
    - yum-rhn-plugin does not respect the default priority setting
        + <https://bugzilla.redhat.com/show_bug.cgi?id=725496>

* SELinux policy related issues:
  
    - Shipped SELinux policy prevents Puppet 2.7.1+ from working
        + <https://bugzilla.redhat.com/show_bug.cgi?id=718390>
  
    - SELinux is preventing /sbin/grubby "search" access to /boot/efi
        + <https://bugzilla.redhat.com/show_bug.cgi?id=727130>
  
    - SELinux is preventing /usr/libexec/qemu-kvm from 'getattr' accesses
        + <https://bugzilla.redhat.com/show_bug.cgi?id=726324>
  
    - SELinux is preventing /usr/libexec/postfix/pickup...
        + <https://bugzilla.redhat.com/show_bug.cgi?id=674770>
  
    - QEMU DAC security driver should not chown of iso images
        + <https://bugzilla.redhat.com/show_bug.cgi?id=712170>

Project timeline
----------------

The course of the project was as follows:

- Mock RPM build host was created in order to be able to produce packages for _Red Hat Enterprise Linux 6_, which has been chosen as a basis operating system on top of which the infrastructure were to be deployed.
  
    + mock packaging has been updated
    + mrepo was ported to RHEL 6
 
 These contributions have been committed to [RepoForge][rf].
 
  [rf]: https://github.com/repoforge/rpms
 
- The hardware was installed and the work on the infrastructure description begun. The following packages have been created / updated / backported to RHEL 6 (and subsequently committed to RepoForge):
  
    + augeas
    + ruby-augeas
    + facter
    + puppet
 
- In the mean time, a [patch for e2fsprogs][patchwork] was created to fix a problem encountered during the installation of RHEL on real hardware.
  
  [patchwork]: http://patchwork.ozlabs.org/patch/109351/
 
- When the infrastructure description was reasonably complete and functional, Jenkins was set up and a first build executor was added.
 
- In the mean time, NEST survey was performed which resulted in a report detailing the current NEST users profile and the directions for future development.
 
- Patches for NEST have been created in order to allow it to build on the continuous integration host.

- In the mean time, it was concluded that although ccache can be packaged (basic packaging difficulty: intermediate) and deployed on the machines, kickstarted in a very same way as the build executors (deployment difficulty: easy), it is not very profitable in the context of NEST.
  
    + Even single-threaded builds on tmpfs only take ~4 minutes, so it makes much more sense to put the work into the build system in order to allow for maximum parallelism (and ideally migrate from a _recursive_ build system to a _non-recursive_ build system, allowing `make` to build a complete dependency graph and further optimize the build process [[miller]][bs]) to reduce build times and solidify the software.
 
  [bs]: http://miller.emu.id.au/pmiller/books/rmch/
 
    + An instruction on how to set up `tmpfs` build root is probably necessary to show the developers who need lots of re-building how to dramatically cut down time spent on compiling.
 
- Investigation of the current state of the build system and research on how to make NEST test suite to emit the results in JUnit format understood by Jenkins lead to the conclusion that a lot of work on the build system necessary in the long term.
  
    + Work to adapt the NEST testsuite to emit JUnit-compatible output was completed and is currently under review
  
    + Patches to get rid of support for libtool 1.5 in the NEST build system and properly package libltdl are under review
  
    + Investigation of the DSO loading issues resulted into a conclusion that rewrite of how the Python bindings are built is necessary; a ticket was created

- Everything is mostly ready for packaging, but issues with build system and `make dist` to generate the tarballs automatically from the checkouts have to be figured out first, so in the end this was put off until later.

